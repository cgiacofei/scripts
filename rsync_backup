#! /bin/bash

die () {
    echo "ERROR: Interval specified twice. Aborting." >&2
    exit 1
}

usage() {
    echo "Do you know how this works?" >&2
}

#------------------------------------------------------------------------------
# Set variables
NAME=`basename "$0"`
TODAY=$(date +%Y-%m-%d)
NOW=$(date +%Y-%m-%dT%H%M)

OPTS=`getopt \
     -o HDWMQYhs:d:n: \
     --long hourly,daily,weekly,monthly,quarterly,yearly,src:,dst:,max:,help \
     -n '$NAME' -- "$@"`

eval set -- "$OPTS"

# Interval options (H,D,W,M,Q,Y) are mutually exclusive.
# Specifying more than one will kill the script.
while true; do
    case "$1" in
        -H|--hourly)
            [ ! -z ${DT+x} ] && die
            [ -z ${MAX+x} ] && MAX=24
            DT=$NOW
            INC='hour'
            shift ;;
        -D|--daily)
            [ ! -z ${DT+x} ] && die
            [ -z ${MAX+x} ] && MAX=7
            DT=$TODAY            
            INC='day'
            shift ;;
        -W|--weekly) 
            [ ! -z ${DT+x} ] && die
            [ -z ${MAX+x} ] && MAX=4
            DT=$TODAY
            INC='week'
            shift ;;
        -M|--monthly)
            [ ! -z ${DT+x} ] && die
            [ -z ${MAX+x} ] && MAX=12
            DT=$TODAY
            INC='month'
            shift ;;
        -Q|--quarterly)
            [ ! -z ${DT+x} ] && die
            [ -z ${MAX+x} ] && MAX=4
            DT=$TODAY
            INC='quarter'
            shift ;;
        -Y|--yearly)
            [ ! -z ${DT+x} ] && die
            [ -z ${MAX+x} ] && MAX=5
            DT=$TODAY
            INC='year'
            shift ;;
        -s|--src) SRC_DIR="$2"; shift; shift ;;
        -d|--dst) BKP_DIR="$2"; shift; shift ;;
        -h|--help) usage; exit;; 
        -n|--max) MAX="$2"; shift; shift ;;
        -- ) shift; break ;;
        *) usage; exit ;;

    esac
done

if [[ -z ${INC+x} ]]; then
    echo "Must specify increment."
    exit
fi

# Check for missing diectory arguments
if [[ -z ${SRC_DIR+x} ]] || [[ -z ${BKP_DIR+x} ]]; then
    echo "Source and destination directories must be specified."
    echo "SRC directory: $SRC_DIR"
    echo "DST directory: $BKP_DIR"
    exit
fi

#------------------------------------------------------------------------------
# Backup Script
mkdir -p "$BKP_DIR"

# Get list of current backup folders and count them
FOLDERS=($(find "$BKP_DIR" -type d -name "$INC*" | sort ))
NUM=${#FOLDERS[@]}
echo "There are currently" $NUM "backups"

# Copy (using hardlinks) the latest backup into todays backup
if [ $NUM -gt 0 ]; then
    if [[ ${FOLDERS[$[$NUM-1]]} != "$BKP_DIR"/$INC.$DT ]]; then
        cp -al ${FOLDERS[$[$NUM-1]]} "$BKP_DIR"/$INC.$DT
    fi
fi

mkdir -p "$BKP_DIR"/$INC.$DT

# rsync into todays backup
rsync -av --delete $SRC_DIR/ "$BKP_DIR"/$INC.$DT

# Keep the most recent MAX backups and delete the rest
if [ $(($NUM+1)) -gt $MAX ]; then
    echo "Cleanup old backups..."
    for i in `seq 0 $[$NUM-$MAX]`; do
        echo "removing backup:" ${FOLDERS[$i]}
        rm -r ${FOLDERS[$i]}   
    done  
fi

exit 0
